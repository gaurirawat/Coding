most asked: leetcode
hashtable implementation using arrays
Operating Systems, Systems Programming and Concurrency:
Know about processes, threads, and . Know about locks, mutexes, semaphores and , and how
they work. Know about what resources a processes needs, a thread needs,
Know a little about scheduling.
ways to represent graph(objects and pointers, matrix, and adjacency list) pros and cons
tries, segment trees implementations
comparator/comparable
String func complexities.
collections internal implementation
collections individual functions.
priority queue: poll happens from which end. how does use of comparators affect the poll value.
famous classes of NP-complete problems, traveling salesman and knapsack problem,


google meet, you tube, gmail,
google search
KMP, string questions revision
graphs rev.
sorting
OS: virtual memory, concurrency issues, locks, monitors, deadlock and livelock and how to avoid them, how context
    switching works, and how it's initiated by the operating system and underlying hardware, multi-core, fundamentals of
    "modern" concurrency constructs.
flood fill
rolling hash
system design:
map reduce
big table
file system
distributed systems and parallel computing
https://codeforces.com/blog/entry/70589
https://www.geeksforgeeks.org/shortest-path-exactly-k-edges-directed-weighted-graph/

Arrays
Basic question. 2.
Google questions. IB 2/3
Leetcode Google question.
OS
OOD
System design
implementations hashtable, segment tree, trie, heap, BST, AVL
Collections func, sorting, string/char function,
comparators
projects
google products, the shutdown, classroom low rating, gmail, youtube, search
rolling hash
flood fill